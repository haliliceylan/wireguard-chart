{{- define "execprobe" -}}
exec:
  command: 
  - /bin/sh
  - -c
  - 'ip link show dev wg0 | grep -s up'
{{- end -}}

{{- define "core.securitycontext" -}}
capabilities:
  drop:
    - ALL
  add:
    - NET_ADMIN
    - NET_RAW
    - SETUID
    - SETGID
{{- end -}}

{{- define "wg.securitycontext" -}}
{{ include "core.securitycontext" . }}
runAsNonRoot: {{ .Values.securityContext.runAsNonRoot | default true }}
runAsUser: {{ .Values.securityContext.runAsUser | default 1000 }}
readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem | default true }}
allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation | default true }}
privileged: {{ .Values.securityContext.privileged | default false }}
{{- end -}}

{{- define "init.securitycontext" -}}
{{ include "core.securitycontext" . }}
runAsNonRoot: false
privileged: true
{{- end -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-wireguard"
  labels:
    role: vpn
    {{- if .Values.labels }}
    {{- range $key, $value := .Values.labels  }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
    
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-wireguard"
  strategy: {{ .Values.deploymentStrategy | toYaml | nindent 4 }}
  template:
    metadata:
      annotations:
        {{- if not .Values.configSecretName }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- range $key, $value := .Values.podAnnotations  }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: "{{ .Release.Name }}-wireguard"
        role: vpn
        {{- if .Values.labels }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Release.Name }}-sa
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      automountServiceAccountToken: false
      securityContext:
        fsGroup: {{ .Values.securityContext.runAsUser | default 1000 }}
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot | default true }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: "{{ .Values.image.pullSecret }}"
      {{- end }}
      initContainers:
        - name: sysctls
          image: busybox:stable
          command:
          - sh
          - -c
          - sysctl -w net.ipv4.ip_forward=1 && sysctl -w net.ipv4.conf.all.forwarding=1
          securityContext: {{ include "init.securitycontext" . | nindent 12 }}
          resources:
            requests:
              memory: 64Mi
              cpu: "100m"
            limits:
              memory: 64Mi
              cpu: "100m"
      containers:
        - name: wireguard
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
          - containerPort: 51820
            protocol: UDP
            name: wireguard
          env:
          - name: LOG_LEVEL
            value: {{ default "info" .Values.logLevel }}
          {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          securityContext: {{ include "wg.securitycontext" . | nindent 12 }}
          resources: {{ .Values.resources | toYaml | nindent 12 }}
          startupProbe: {{ include "execprobe" . | nindent 12 }}
            periodSeconds: 2
            failureThreshold: 15
          readinessProbe: {{ include "execprobe" . | nindent 12 }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe: {{ include "execprobe" . | nindent 12 }}
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
          - name: run
            mountPath: /run
          {{- if not .Values.disableConfigManagement }}
          - name: config
            mountPath: /etc/wireguard/wg0.conf
            subPath: {{ .Values.configSecretProperty | quote }}
          {{- end }}
          {{- if not .Values.disablePrivateKeyManagement }}
          - name: privatekey
            mountPath: /etc/wireguard/privatekey
            subPath: privatekey
          {{- end }}
          {{- if .Values.volumeMounts }}
            {{- .Values.volumeMounts | toYaml | nindent 10 }}
          {{- end }}
      volumes:
      - name: run
        emptyDir: {}
      {{- if not .Values.disableConfigManagement }}
      - name: config
        secret:
          secretName: "{{ coalesce .Values.configSecretName (printf "%s-wg-config" .Release.Name) }}"
      {{- end }}
      {{- if not .Values.disablePrivateKeyManagement }}
      - name: privatekey
        secret:
          secretName: "{{ coalesce .Values.secretName (printf "%s-wg-generated" .Release.Name) }}"
      {{- end }}
      {{- if .Values.volumes }}
        {{- .Values.volumes | toYaml | nindent 6 }}
      {{- end }}
